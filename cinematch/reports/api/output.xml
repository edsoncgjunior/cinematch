<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.12.11 on linux)" generated="2025-09-14T22:40:23.728319" rpa="false" schemaversion="5">
<suite id="s1" name="Api" source="/tests/api.robot">
<test id="s1-t1" name="API - Health e filmes" line="9">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-09-14T22:40:23.999384" level="INFO">Creating Session using : alias=api, url=http://backend:3000/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>api</arg>
<arg>${API}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-14T22:40:23.998702" elapsed="0.001153"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-14T22:40:24.017855" level="INFO">GET Request : url=http://backend:3000/api/health 
 path_url=/api/health 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-09-14T22:40:24.018235" level="INFO">GET Response : url=http://backend:3000/api/health 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '62', 'ETag': 'W/"3e-WRgokD/lHSihanwbOGTylQHjBzU"', 'Date': 'Sun, 14 Sep 2025 22:40:24 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"status":"ok","db":{"ok":true,"modo":"postgres","erro":null}} 
 </msg>
<msg time="2025-09-14T22:40:24.018559" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<var>${res}</var>
<arg>api</arg>
<arg>/health</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-14T22:40:24.000291" elapsed="0.018321"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-14T22:40:24.020431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${res.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-14T22:40:24.019150" elapsed="0.001398"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-14T22:40:24.043708" level="INFO">GET Request : url=http://backend:3000/api/filmes 
 path_url=/api/filmes 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-09-14T22:40:24.043814" level="INFO">GET Response : url=http://backend:3000/api/filmes 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '4753', 'ETag': 'W/"1291-vkMbo9tnAAwu57P5BKXv4l82AeE"', 'Date': 'Sun, 14 Sep 2025 22:40:24 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"filmes":[{"id":5,"nome":"A Chegada","genero":"Ficção Científica","ano":2016,"nota":4.2,"poster_url":"http://www.impawards.com/2016/posters/arrival_ver3.jpg"},{"id":8,"nome":"A Lista de Schindler","genero":"Drama","ano":1993,"nota":4.9,"poster_url":"http://www.impawards.com/1993/posters/schindlers_list_ver2.jpg"},{"id":1,"nome":"A Origem","genero":"Ficção Científica","ano":2010,"nota":4.8,"poster_url":"http://www.impawards.com/2010/posters/inception.jpg"},{"id":26,"nome":"A Viagem de Chihiro","genero":"Animação","ano":2001,"nota":4.8,"poster_url":"http://www.impawards.com/2002/posters/spirited_away.jpg"},{"id":13,"nome":"Batman: O Cavaleiro das Trevas","genero":"Ação","ano":2008,"nota":4.9,"poster_url":"http://www.impawards.com/2008/posters/dark_knight_ver2.jpg"},{"id":3,"nome":"Blade Runner 2049","genero":"Ficção Científica","ano":2017,"nota":4.3,"poster_url":"http://www.impawards.com/2017/posters/blade_runner_twenty_forty_nine.jpg"},{"id":11,"nome":"Clube da Luta","genero":"Drama","ano":1999,"nota":4.4,"poster_url":"http://www.impawards.com/1999/posters/fight_club_ver4.jpg"},{"id":19,"nome":"Corra!","genero":"Terror","ano":2017,"nota":4.3,"poster_url":"http://www.impawards.com/2017/posters/get_out.jpg"},{"id":16,"nome":"Duro de Matar","genero":"Ação","ano":1988,"nota":4.3,"poster_url":"http://www.impawards.com/1988/posters/die_hard.jpg"},{"id":6,"nome":"Ex Machina: Instinto Artificial","genero":"Ficção Científica","ano":2015,"nota":4.1,"poster_url":"http://www.impawards.com/2015/posters/ex_machina.jpg"},{"id":9,"nome":"Forrest Gump: O Contador de Histórias","genero":"Drama","ano":1994,"nota":4.5,"poster_url":"http://www.impawards.com/1994/posters/forrest_gump.jpg"},{"id":17,"nome":"Gladiador","genero":"Ação","ano":2000,"nota":4.4,"poster_url":"http://www.impawards.com/2000/posters/gladiator_ver2.jpg"},{"id":22,"nome":"Hereditário","genero":"Terror","ano":2018,"nota":4,"poster_url":"http://www.impawards.com/2018/posters/hereditary.jpg"},{"id":4,"nome":"Interestelar","genero":"Ficção Científica","ano":2014,"nota":4.6,"poster_url":"http://www.impawards.com/2014/posters/interstellar_ver2.jpg"},{"id":21,"nome":"Invocação do Mal","genero":"Terror","ano":2013,"nota":4.1,"poster_url":"http://www.impawards.com/2013/posters/conjuring_ver2.jpg"},{"id":23,"nome":"It: A Coisa","genero":"Terror","ano":2017,"nota":4.2,"poster_url":"http://www.impawards.com/2017/posters/it_ver4.jpg"},{"id":15,"nome":"John Wick: De Volta ao Jogo","genero":"Ação","ano":2014,"nota":4.1,"poster_url":"http://www.impawards.com/2014/posters/john_wick.jpg"},{"id":14,"nome":"Mad Max: Estrada da Fúria","genero":"Ação","ano":2015,"nota":4.5,"poster_url":"http://www.impawards.com/intl/australia/2015/posters/mad_max_fury_road.jpg"},{"id":2,"nome":"Matrix","genero":"Ficção Científica","ano":1999,"nota":4.7,"poster_url":"http://www.impawards.com/1999/posters/matrix_ver1_xlg.jpg"},{"id":24,"nome":"O Babadook","genero":"Terror","ano":2014,"nota":4.1,"poster_url":"http://www.impawards.com/intl/australia/2014/posters/babadook.jpg"},{"id":7,"nome":"O Poderoso Chefão","genero":"Drama","ano":1972,"nota":5,"poster_url":"http://www.impawards.com/1972/posters/godfather_ver1.jpg"},{"id":28,"nome":"O Rei Leão","genero":"Animação","ano":1994,"nota":4.7,"poster_url":"http://www.impawards.com/1994/posters/lion_king_ver1.jpg"},{"id":18,"nome":"Os Vingadores","genero":"Ação","ano":2012,"nota":4.2,"poster_url":"http://www.impawards.com/2012/posters/avengers_ver14.jpg"},{"id":12,"nome":"Parasita","genero":"Drama","ano":2019,"nota":4.8,"poster_url":"http://www.impawards.com/intl/south_korea/2019/posters/parasite.jpg"},{"id":27,"nome":"Procurando Nemo","genero":"Animação","ano":2003,"nota":4.4,"poster_url":"http://www.impawards.com/2003/posters/finding_nemo_ver2.jpg"},{"id":25,"nome":"Toy Story","genero":"Animação","ano":1995,"nota":4.5,"poster_url":"http://www.impawards.com/1995/posters/toy_story_ver1.jpg"},{"id":20,"nome":"Um Lugar Silencioso","genero":"Terror","ano":2018,"nota":4,"poster_url":"http://www.impawards.com/2018/posters/quiet_place.jpg"},{"id":10,"nome":"Um Sonho de Liberdade","genero":"Drama","ano":1994,"nota":4.9,"poster_url":"http://www.impawards.com/1994/posters/shawshank_redemption_ver2.jpg"},{"id":29,"nome":"Up: Altas Aventuras","genero":"Animação","ano":2009,"nota":4.6,"poster_url":"http://www.impawards.com/2009/posters/up_ver2.jpg"},{"id":30,"nome":"Viva: A Vida é uma Festa","genero":"Animação","ano":2017,"nota":4.5,"poster_url":"http://www.impawards.com/2017/posters/coco.jpg"}],"generos":["Ação","Animação","Drama","Ficção Científica","Terror"],"anos":[2019,2018,2017,2016,2015,2014,2013,2012,2010,2009,2008,2003,2001,2000,1999,1995,1994,1993,1988,1972]} 
 </msg>
<msg time="2025-09-14T22:40:24.044059" level="INFO">${r} = &lt;Response [200]&gt;</msg>
<var>${r}</var>
<arg>api</arg>
<arg>/filmes</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-14T22:40:24.020977" elapsed="0.023123"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-14T22:40:24.045789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${r.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-14T22:40:24.044465" elapsed="0.004092"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${r.json()}</arg>
<arg>filmes</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-14T22:40:24.048935" elapsed="0.001692"/>
</kw>
<status status="PASS" start="2025-09-14T22:40:23.994814" elapsed="0.056327"/>
</test>
<status status="PASS" start="2025-09-14T22:40:23.734829" elapsed="0.318043"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat name="Api" id="s1" pass="1" fail="0" skip="0">Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
